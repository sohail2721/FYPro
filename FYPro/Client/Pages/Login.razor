@page "/Login"
@inject HttpClient http
@inject IJSRuntime jsr
@using FYPro.Shared
@inherits LayoutComponentBase
@using MudBlazor
@using OpenQA.Selenium;
@using OpenQA.Selenium.Safari;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.IO
@using System.Text.Json;


@layout NoLayout
@*@inject ISnackbar Snackbar*@
@inject NavigationManager NavigationManager


<html>
<head>
    <title>Login Page</title>
    <link rel="stylesheet" type="text/css" href="style.css">



</head>
<body>

    <div id="my-alert")">
        <div class="alert-container">
            <span class="oi oi-warning alert-text"> Invalid Username or Password</span>
            @*<button class="close-button" @onclick="() => HideAlert()">x</button>*@
        </div>
    </div>



    <div class="container">
        <div class="left-section">
   
        </div>
        <div class="right-section">
            <form action="#" method="POST">
                <div class="logo">
                    <img src="FYPROLOGO.png" alt="Logo">
                </div>
                <div class="login-box">
                    <h2>Login</h2>
                    <div class="input-group">
                        <label for="username">Username</label>
                        <input type="text" id="Email" name="Email" required @bind="Email">
                    </div>
                    <div class="input-group">
                        <label for="password">Password</label>
                        <input type="password" id="password" name="password" required @bind="Password">
                    </div>
                    <div class="login-container">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="login-button" OnClick="@HandleLogin">Login</MudButton>
                    </div>
                    <div class="forgot-password">
                        <a href="ResetPassword">Forgot password?</a>
                    </div>
                </div>
            </form>
        </div>
    </div>




</body>

</html>

@code{

    public string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    List<UserModel> LoginData = new List<UserModel>();
    private bool showAlert = false;

    protected async override Task OnInitializedAsync()
    {
        ApiRequest.http = http;
        ApiRequest.jsr = jsr;
        await jsr.InvokeVoidAsync("localStorage.clear");

    }
    private void ShowAlert()
    {
        showAlert = true;
        StateHasChanged();
    }

    private void HideAlert()
    {
        showAlert = false;
        StateHasChanged();
    }

    // protected async Task HandleLogin()
    // {

    //     var i = await http.GetFromJsonAsync<List<int>>($"api/Auth/VerificationUser/{Email}");

    //     if (i.ToList()[0] > 0)
    //     {
    //         LoginData = await http.GetFromJsonAsync<List<UserModel>>($"api/Auth/user/{Email}");
    //         if (LoginData.ToList()[0].Email == Email & LoginData.ToList()[0].Password == Password)
    //         {
    //             Console.WriteLine("Login Successful!");
    //             await jsr.InvokeVoidAsync("localStorage.setItem", "user", LoginData.ToList()[0].jwtbearer).ConfigureAwait(false);
    //             // await jsr.InvokeVoidAsync("localStorage.setItem", "facultyNumber", LoginData.ToList()[0].FacultyNumber);

    //             if (LoginData.ToList()[0].UserType == "Student")
    //             {
    //                 NavigationManager.NavigateTo($"/StudentHomepage");
    //             }
    //             else if (LoginData.ToList()[0].UserType == "Administrator")
    //             {
    //                 NavigationManager.NavigateTo($"/AdminHomepage");
    //             }
    //             else if (LoginData.ToList()[0].UserType == "Supervisor")
    //             {

    //                 NavigationManager.NavigateTo($"/SupervisorHomepage");
    //             }
    //         }
    //     }

    // }

    protected async Task HandleLogin()
    {
        var userExists = await http.GetFromJsonAsync<List<int>>($"api/Auth/VerificationUser/{Email}");

        if (userExists[0] > 0)
        {
            var userData = await http.GetFromJsonAsync<List<UserModel>>($"api/Auth/user/{Email}");
            var user = userData[0];
            if (user.Email == Email && user.Password == Password)
            {
                Console.WriteLine("Login Successful!");
                await jsr.InvokeVoidAsync("localStorage.setItem", "user", user.jwtbearer);
                await jsr.InvokeVoidAsync("localStorage.setItem", "facultyNumber", user.FacultyNumber);

                // Navigate based on user type
                if (user.UserType == "Student")
                {
                    NavigationManager.NavigateTo("/StudentHomepage");
                }
                else if (user.UserType == "Administrator")
                {
                    NavigationManager.NavigateTo("/AdminHomepage");
                }
                else if (user.UserType == "Supervisor")
                {
                    NavigationManager.NavigateTo("/SupervisorHomepage");
                }
            }
            else
            {
                ShowAlert();
            }
        }
    }


}